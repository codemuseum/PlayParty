//
//  MainViewController.m
//  Test
//
//  Created by Matthew Moore on 2/21/10.
//  Copyright ThriveSmart, LLC 2010. All rights reserved.
//

#define AUDIO_SAVE_DIR [NSHomeDirectory() stringByAppendingPathComponent:@"Documents"]

#import "MainViewController.h"
#import "MainView.h"

// Facebook Statics
static NSString* kApiKey = @"9f0083af27bff83ce5d4841716f5ec2f";
static NSString* kApiSecret = @"c28af43643516490f1fb95ceb4aefb42";
static NSString* kGetSessionProxy = nil; // @"<YOUR SESSION CALLBACK)>"; 
// Enter either your API secret or a callback URL above (as described in documentation)


// Upload Statics
static NSString* kServerUploadURL	= @"http://partyplay.heroku.com/uploads"; // @"http://localhost:3000/uploads";
static NSString* kDefaultUploadMessage	= @"Watch our latest party.";
static NSString* kTwitterSource	= @"playparty";
static NSString* kUploadFilename	= @"playparty.caf";
static NSString* kUploadFiletype	= @"audio/x-caf";

// Video Upload Statics
// Draw an X on the screen over 61.470 seconds (closest I could come to 1 minute while remaining sane)
static NSString* kUploadVideoCoords = @"[[0,0,0],[1,1,30],[2,1,60],[3,2,90],[4,2,120],[5,3,150],[6,3,180],[7,4,210],[8,4,240],[9,5,270],[10,5,300],[11,6,330],[12,6,360],[13,7,390],[14,7,420],[15,8,450],[16,8,480],[17,9,510],[18,9,540],[19,10,570],[20,10,600],[21,11,630],[22,11,660],[23,12,690],[24,12,720],[25,13,750],[26,13,780],[27,14,810],[28,14,840],[29,15,870],[30,15,900],[31,16,930],[32,16,960],[33,17,990],[34,17,1020],[35,18,1050],[36,18,1080],[37,19,1110],[38,19,1140],[39,20,1170],[40,20,1200],[41,21,1230],[42,21,1260],[43,22,1290],[44,22,1320],[45,23,1350],[46,23,1380],[47,24,1410],[48,24,1440],[49,25,1470],[50,25,1500],[51,26,1530],[52,26,1560],[53,27,1590],[54,27,1620],[55,28,1650],[56,28,1680],[57,29,1710],[58,29,1740],[59,30,1770],[60,30,1800],[61,31,1830],[62,31,1860],[63,32,1890],[64,32,1920],[65,33,1950],[66,33,1980],[67,34,2010],[68,34,2040],[69,35,2070],[70,35,2100],[71,36,2130],[72,36,2160],[73,37,2190],[74,37,2220],[75,38,2250],[76,38,2280],[77,39,2310],[78,39,2340],[79,40,2370],[80,40,2400],[81,41,2430],[82,41,2460],[83,42,2490],[84,42,2520],[85,43,2550],[86,43,2580],[87,44,2610],[88,44,2640],[89,45,2670],[90,45,2700],[91,46,2730],[92,46,2760],[93,47,2790],[94,47,2820],[95,48,2850],[96,48,2880],[97,49,2910],[98,49,2940],[99,50,2970],[100,50,3000],[101,51,3030],[102,51,3060],[103,52,3090],[104,52,3120],[105,53,3150],[106,53,3180],[107,54,3210],[108,54,3240],[109,55,3270],[110,55,3300],[111,56,3330],[112,56,3360],[113,57,3390],[114,57,3420],[115,58,3450],[116,58,3480],[117,59,3510],[118,59,3540],[119,60,3570],[120,60,3600],[121,61,3630],[122,61,3660],[123,62,3690],[124,62,3720],[125,63,3750],[126,63,3780],[127,64,3810],[128,64,3840],[129,65,3870],[130,65,3900],[131,66,3930],[132,66,3960],[133,67,3990],[134,67,4020],[135,68,4050],[136,68,4080],[137,69,4110],[138,69,4140],[139,70,4170],[140,70,4200],[141,71,4230],[142,71,4260],[143,72,4290],[144,72,4320],[145,73,4350],[146,73,4380],[147,74,4410],[148,74,4440],[149,75,4470],[150,75,4500],[151,76,4530],[152,76,4560],[153,77,4590],[154,77,4620],[155,78,4650],[156,78,4680],[157,79,4710],[158,79,4740],[159,80,4770],[160,80,4800],[161,81,4830],[162,81,4860],[163,82,4890],[164,82,4920],[165,83,4950],[166,83,4980],[167,84,5010],[168,84,5040],[169,85,5070],[170,85,5100],[171,86,5130],[172,86,5160],[173,87,5190],[174,87,5220],[175,88,5250],[176,88,5280],[177,89,5310],[178,89,5340],[179,90,5370],[180,90,5400],[181,91,5430],[182,91,5460],[183,92,5490],[184,92,5520],[185,93,5550],[186,93,5580],[187,94,5610],[188,94,5640],[189,95,5670],[190,95,5700],[191,96,5730],[192,96,5760],[193,97,5790],[194,97,5820],[195,98,5850],[196,98,5880],[197,99,5910],[198,99,5940],[199,100,5970],[200,100,6000],[201,101,6030],[202,101,6060],[203,102,6090],[204,102,6120],[205,103,6150],[206,103,6180],[207,104,6210],[208,104,6240],[209,105,6270],[210,105,6300],[211,106,6330],[212,106,6360],[213,107,6390],[214,107,6420],[215,108,6450],[216,108,6480],[217,109,6510],[218,109,6540],[219,110,6570],[220,110,6600],[221,111,6630],[222,111,6660],[223,112,6690],[224,112,6720],[225,113,6750],[226,113,6780],[227,114,6810],[228,114,6840],[229,115,6870],[230,115,6900],[231,116,6930],[232,116,6960],[233,117,6990],[234,117,7020],[235,118,7050],[236,118,7080],[237,119,7110],[238,119,7140],[239,120,7170],[240,120,7200],[241,121,7230],[242,121,7260],[243,122,7290],[244,122,7320],[245,123,7350],[246,123,7380],[247,124,7410],[248,124,7440],[249,125,7470],[250,125,7500],[251,126,7530],[252,126,7560],[253,127,7590],[254,127,7620],[255,128,7650],[256,128,7680],[257,129,7710],[258,129,7740],[259,130,7770],[260,130,7800],[261,131,7830],[262,131,7860],[263,132,7890],[264,132,7920],[265,133,7950],[266,133,7980],[267,134,8010],[268,134,8040],[269,135,8070],[270,135,8100],[271,136,8130],[272,136,8160],[273,137,8190],[274,137,8220],[275,138,8250],[276,138,8280],[277,139,8310],[278,139,8340],[279,140,8370],[280,140,8400],[281,141,8430],[282,141,8460],[283,142,8490],[284,142,8520],[285,143,8550],[286,143,8580],[287,144,8610],[288,144,8640],[289,145,8670],[290,145,8700],[291,146,8730],[292,146,8760],[293,147,8790],[294,147,8820],[295,148,8850],[296,148,8880],[297,149,8910],[298,149,8940],[299,150,8970],[300,150,9000],[301,151,9030],[302,151,9060],[303,152,9090],[304,152,9120],[305,153,9150],[306,153,9180],[307,154,9210],[308,154,9240],[309,155,9270],[310,155,9300],[311,156,9330],[312,156,9360],[313,157,9390],[314,157,9420],[315,158,9450],[316,158,9480],[317,159,9510],[318,159,9540],[319,160,9570],[320,160,9600],[321,161,9630],[322,161,9660],[323,162,9690],[324,162,9720],[325,163,9750],[326,163,9780],[327,164,9810],[328,164,9840],[329,165,9870],[330,165,9900],[331,166,9930],[332,166,9960],[333,167,9990],[334,167,10020],[335,168,10050],[336,168,10080],[337,169,10110],[338,169,10140],[339,170,10170],[340,170,10200],[341,171,10230],[342,171,10260],[343,172,10290],[344,172,10320],[345,173,10350],[346,173,10380],[347,174,10410],[348,174,10440],[349,175,10470],[350,175,10500],[351,176,10530],[352,176,10560],[353,177,10590],[354,177,10620],[355,178,10650],[356,178,10680],[357,179,10710],[358,179,10740],[359,180,10770],[360,180,10800],[361,181,10830],[362,181,10860],[363,182,10890],[364,182,10920],[365,183,10950],[366,183,10980],[367,184,11010],[368,184,11040],[369,185,11070],[370,185,11100],[371,186,11130],[372,186,11160],[373,187,11190],[374,187,11220],[375,188,11250],[376,188,11280],[377,189,11310],[378,189,11340],[379,190,11370],[380,190,11400],[381,191,11430],[382,191,11460],[383,192,11490],[384,192,11520],[385,193,11550],[386,193,11580],[387,194,11610],[388,194,11640],[389,195,11670],[390,195,11700],[391,196,11730],[392,196,11760],[393,197,11790],[394,197,11820],[395,198,11850],[396,198,11880],[397,199,11910],[398,199,11940],[399,200,11970],[400,200,12000],[401,201,12030],[402,201,12060],[403,202,12090],[404,202,12120],[405,203,12150],[406,203,12180],[407,204,12210],[408,204,12240],[409,205,12270],[410,205,12300],[\"clear\",\"clear\",12330],[412,206,12360],[413,207,12390],[414,207,12420],[415,208,12450],[416,208,12480],[417,209,12510],[418,209,12540],[419,210,12570],[420,210,12600],[421,211,12630],[422,211,12660],[423,212,12690],[424,212,12720],[425,213,12750],[426,213,12780],[427,214,12810],[428,214,12840],[429,215,12870],[430,215,12900],[431,216,12930],[432,216,12960],[433,217,12990],[434,217,13020],[435,218,13050],[436,218,13080],[437,219,13110],[438,219,13140],[439,220,13170],[440,220,13200],[441,221,13230],[442,221,13260],[443,222,13290],[444,222,13320],[445,223,13350],[446,223,13380],[447,224,13410],[448,224,13440],[449,225,13470],[450,225,13500],[451,226,13530],[452,226,13560],[453,227,13590],[454,227,13620],[455,228,13650],[456,228,13680],[457,229,13710],[458,229,13740],[459,230,13770],[460,230,13800],[461,231,13830],[462,231,13860],[463,232,13890],[464,232,13920],[465,233,13950],[466,233,13980],[467,234,14010],[468,234,14040],[469,235,14070],[470,235,14100],[471,236,14130],[472,236,14160],[473,237,14190],[474,237,14220],[475,238,14250],[476,238,14280],[477,239,14310],[478,239,14340],[479,240,14370],[480,240,14400],[481,241,14430],[482,241,14460],[483,242,14490],[484,242,14520],[485,243,14550],[486,243,14580],[487,244,14610],[488,244,14640],[489,245,14670],[490,245,14700],[491,246,14730],[492,246,14760],[493,247,14790],[494,247,14820],[495,248,14850],[496,248,14880],[497,249,14910],[498,249,14940],[499,250,14970],[500,250,15000],[501,251,15030],[502,251,15060],[503,252,15090],[504,252,15120],[505,253,15150],[506,253,15180],[507,254,15210],[508,254,15240],[509,255,15270],[510,255,15300],[511,256,15330],[512,256,15360],[513,257,15390],[514,257,15420],[515,258,15450],[516,258,15480],[517,259,15510],[518,259,15540],[519,260,15570],[520,260,15600],[521,261,15630],[522,261,15660],[523,262,15690],[524,262,15720],[525,263,15750],[526,263,15780],[527,264,15810],[528,264,15840],[529,265,15870],[530,265,15900],[531,266,15930],[532,266,15960],[533,267,15990],[534,267,16020],[535,268,16050],[536,268,16080],[537,269,16110],[538,269,16140],[539,270,16170],[540,270,16200],[541,271,16230],[542,271,16260],[543,272,16290],[544,272,16320],[545,273,16350],[546,273,16380],[547,274,16410],[548,274,16440],[549,275,16470],[550,275,16500],[551,276,16530],[552,276,16560],[553,277,16590],[554,277,16620],[555,278,16650],[556,278,16680],[557,279,16710],[558,279,16740],[559,280,16770],[560,280,16800],[561,281,16830],[562,281,16860],[563,282,16890],[564,282,16920],[565,283,16950],[566,283,16980],[567,284,17010],[568,284,17040],[569,285,17070],[570,285,17100],[571,286,17130],[572,286,17160],[573,287,17190],[574,287,17220],[575,288,17250],[576,288,17280],[577,289,17310],[578,289,17340],[579,290,17370],[580,290,17400],[581,291,17430],[582,291,17460],[583,292,17490],[584,292,17520],[585,293,17550],[586,293,17580],[587,294,17610],[588,294,17640],[589,295,17670],[590,295,17700],[591,296,17730],[592,296,17760],[593,297,17790],[594,297,17820],[595,298,17850],[596,298,17880],[597,299,17910],[598,299,17940],[599,300,17970],[600,300,18000],[601,301,18030],[602,301,18060],[603,302,18090],[604,302,18120],[605,303,18150],[606,303,18180],[607,304,18210],[608,304,18240],[609,305,18270],[610,305,18300],[611,306,18330],[612,306,18360],[613,307,18390],[614,307,18420],[615,308,18450],[616,308,18480],[617,309,18510],[618,309,18540],[619,310,18570],[620,310,18600],[621,311,18630],[622,311,18660],[623,312,18690],[624,312,18720],[625,313,18750],[626,313,18780],[627,314,18810],[628,314,18840],[629,315,18870],[630,315,18900],[631,316,18930],[632,316,18960],[633,317,18990],[634,317,19020],[635,318,19050],[636,318,19080],[637,319,19110],[638,319,19140],[639,320,19170],[640,320,19200],[641,321,19230],[642,321,19260],[643,322,19290],[644,322,19320],[645,323,19350],[646,323,19380],[647,324,19410],[648,324,19440],[649,325,19470],[650,325,19500],[651,326,19530],[652,326,19560],[653,327,19590],[654,327,19620],[655,328,19650],[656,328,19680],[657,329,19710],[658,329,19740],[659,330,19770],[660,330,19800],[661,331,19830],[662,331,19860],[663,332,19890],[664,332,19920],[665,333,19950],[666,333,19980],[667,334,20010],[668,334,20040],[669,335,20070],[670,335,20100],[671,336,20130],[672,336,20160],[673,337,20190],[674,337,20220],[675,338,20250],[676,338,20280],[677,339,20310],[678,339,20340],[679,340,20370],[680,340,20400],[681,341,20430],[682,341,20460],[683,342,20490],[684,342,20520],[685,343,20550],[686,343,20580],[687,344,20610],[688,344,20640],[689,345,20670],[690,345,20700],[691,346,20730],[692,346,20760],[693,347,20790],[694,347,20820],[695,348,20850],[696,348,20880],[697,349,20910],[698,349,20940],[699,350,20970],[700,350,21000],[701,351,21030],[702,351,21060],[703,352,21090],[704,352,21120],[705,353,21150],[706,353,21180],[707,354,21210],[708,354,21240],[709,355,21270],[710,355,21300],[711,356,21330],[712,356,21360],[713,357,21390],[714,357,21420],[715,358,21450],[716,358,21480],[717,359,21510],[718,359,21540],[719,360,21570],[720,360,21600],[721,361,21630],[722,361,21660],[723,362,21690],[724,362,21720],[725,363,21750],[726,363,21780],[727,364,21810],[728,364,21840],[729,365,21870],[730,365,21900],[731,366,21930],[732,366,21960],[733,367,21990],[734,367,22020],[735,368,22050],[736,368,22080],[737,369,22110],[738,369,22140],[739,370,22170],[740,370,22200],[741,371,22230],[742,371,22260],[743,372,22290],[744,372,22320],[745,373,22350],[746,373,22380],[747,374,22410],[748,374,22440],[749,375,22470],[750,375,22500],[751,376,22530],[752,376,22560],[753,377,22590],[754,377,22620],[755,378,22650],[756,378,22680],[757,379,22710],[758,379,22740],[759,380,22770],[760,380,22800],[761,381,22830],[762,381,22860],[763,382,22890],[764,382,22920],[765,383,22950],[766,383,22980],[767,384,23010],[768,384,23040],[769,385,23070],[770,385,23100],[771,386,23130],[772,386,23160],[773,387,23190],[774,387,23220],[775,388,23250],[776,388,23280],[777,389,23310],[778,389,23340],[779,390,23370],[780,390,23400],[781,391,23430],[782,391,23460],[783,392,23490],[784,392,23520],[785,393,23550],[786,393,23580],[787,394,23610],[788,394,23640],[789,395,23670],[790,395,23700],[791,396,23730],[792,396,23760],[793,397,23790],[794,397,23820],[795,398,23850],[796,398,23880],[797,399,23910],[798,399,23940],[799,400,23970],[800,400,24000],[801,401,24030],[802,401,24060],[803,402,24090],[804,402,24120],[805,403,24150],[806,403,24180],[807,404,24210],[808,404,24240],[809,405,24270],[810,405,24300],[811,406,24330],[812,406,24360],[813,407,24390],[814,407,24420],[815,408,24450],[816,408,24480],[817,409,24510],[818,409,24540],[819,410,24570],[820,410,24600],[821,411,24630],[822,411,24660],[823,412,24690],[824,412,24720],[825,413,24750],[826,413,24780],[827,414,24810],[828,414,24840],[829,415,24870],[830,415,24900],[831,416,24930],[832,416,24960],[833,417,24990],[834,417,25020],[835,418,25050],[836,418,25080],[837,419,25110],[838,419,25140],[839,420,25170],[840,420,25200],[841,421,25230],[842,421,25260],[843,422,25290],[844,422,25320],[845,423,25350],[846,423,25380],[847,424,25410],[848,424,25440],[849,425,25470],[850,425,25500],[851,426,25530],[852,426,25560],[853,427,25590],[854,427,25620],[855,428,25650],[856,428,25680],[857,429,25710],[858,429,25740],[859,430,25770],[860,430,25800],[861,431,25830],[862,431,25860],[863,432,25890],[864,432,25920],[865,433,25950],[866,433,25980],[867,434,26010],[868,434,26040],[869,435,26070],[870,435,26100],[871,436,26130],[872,436,26160],[873,437,26190],[874,437,26220],[875,438,26250],[876,438,26280],[877,439,26310],[878,439,26340],[879,440,26370],[880,440,26400],[881,441,26430],[882,441,26460],[883,442,26490],[884,442,26520],[885,443,26550],[886,443,26580],[887,444,26610],[888,444,26640],[889,445,26670],[890,445,26700],[891,446,26730],[892,446,26760],[893,447,26790],[894,447,26820],[895,448,26850],[896,448,26880],[897,449,26910],[898,449,26940],[899,450,26970],[900,450,27000],[901,451,27030],[902,451,27060],[903,452,27090],[904,452,27120],[905,453,27150],[906,453,27180],[907,454,27210],[908,454,27240],[909,455,27270],[910,455,27300],[911,456,27330],[912,456,27360],[913,457,27390],[914,457,27420],[915,458,27450],[916,458,27480],[917,459,27510],[918,459,27540],[919,460,27570],[920,460,27600],[921,461,27630],[922,461,27660],[923,462,27690],[924,462,27720],[925,463,27750],[926,463,27780],[927,464,27810],[928,464,27840],[929,465,27870],[930,465,27900],[931,466,27930],[932,466,27960],[933,467,27990],[934,467,28020],[935,468,28050],[936,468,28080],[937,469,28110],[938,469,28140],[939,470,28170],[940,470,28200],[941,471,28230],[942,471,28260],[943,472,28290],[944,472,28320],[945,473,28350],[946,473,28380],[947,474,28410],[948,474,28440],[949,475,28470],[950,475,28500],[951,476,28530],[952,476,28560],[953,477,28590],[954,477,28620],[955,478,28650],[956,478,28680],[957,479,28710],[958,479,28740],[959,480,28770],[960,480,28800],[961,481,28830],[962,481,28860],[963,482,28890],[964,482,28920],[965,483,28950],[966,483,28980],[967,484,29010],[968,484,29040],[969,485,29070],[970,485,29100],[971,486,29130],[972,486,29160],[973,487,29190],[974,487,29220],[975,488,29250],[976,488,29280],[977,489,29310],[978,489,29340],[979,490,29370],[980,490,29400],[981,491,29430],[982,491,29460],[983,492,29490],[984,492,29520],[985,493,29550],[986,493,29580],[987,494,29610],[988,494,29640],[989,495,29670],[990,495,29700],[991,496,29730],[992,496,29760],[993,497,29790],[994,497,29820],[995,498,29850],[996,498,29880],[997,499,29910],[998,499,29940],[999,500,29970],[1000,500,30000],[1001,501,30030],[1002,501,30060],[1003,502,30090],[1004,502,30120],[1005,503,30150],[1006,503,30180],[1007,504,30210],[1008,504,30240],[1009,505,30270],[1010,505,30300],[1011,506,30330],[1012,506,30360],[1013,507,30390],[1014,507,30420],[1015,508,30450],[1016,508,30480],[1017,509,30510],[1018,509,30540],[1019,510,30570],[1020,510,30600],[1021,511,30630],[1022,511,30660],[1023,512,30690],[1024,512,30720],[1024,0,30750],[1023,1,30780],[1022,1,30810],[1021,2,30840],[1020,2,30870],[1019,3,30900],[1018,3,30930],[1017,4,30960],[1016,4,30990],[1015,5,31020],[1014,5,31050],[1013,6,31080],[1012,6,31110],[1011,7,31140],[1010,7,31170],[1009,8,31200],[1008,8,31230],[1007,9,31260],[1006,9,31290],[1005,10,31320],[1004,10,31350],[1003,11,31380],[1002,11,31410],[1001,12,31440],[1000,12,31470],[999,13,31500],[998,13,31530],[997,14,31560],[996,14,31590],[995,15,31620],[994,15,31650],[993,16,31680],[992,16,31710],[991,17,31740],[990,17,31770],[989,18,31800],[988,18,31830],[987,19,31860],[986,19,31890],[985,20,31920],[984,20,31950],[983,21,31980],[982,21,32010],[981,22,32040],[980,22,32070],[979,23,32100],[978,23,32130],[977,24,32160],[976,24,32190],[975,25,32220],[974,25,32250],[973,26,32280],[972,26,32310],[971,27,32340],[970,27,32370],[969,28,32400],[968,28,32430],[967,29,32460],[966,29,32490],[965,30,32520],[964,30,32550],[963,31,32580],[962,31,32610],[961,32,32640],[960,32,32670],[959,33,32700],[958,33,32730],[957,34,32760],[956,34,32790],[955,35,32820],[954,35,32850],[953,36,32880],[952,36,32910],[951,37,32940],[950,37,32970],[949,38,33000],[948,38,33030],[947,39,33060],[946,39,33090],[945,40,33120],[944,40,33150],[943,41,33180],[942,41,33210],[941,42,33240],[940,42,33270],[939,43,33300],[938,43,33330],[937,44,33360],[936,44,33390],[935,45,33420],[934,45,33450],[933,46,33480],[932,46,33510],[931,47,33540],[930,47,33570],[929,48,33600],[928,48,33630],[927,49,33660],[926,49,33690],[925,50,33720],[924,50,33750],[923,51,33780],[922,51,33810],[921,52,33840],[920,52,33870],[919,53,33900],[918,53,33930],[917,54,33960],[916,54,33990],[915,55,34020],[914,55,34050],[913,56,34080],[912,56,34110],[911,57,34140],[910,57,34170],[909,58,34200],[908,58,34230],[907,59,34260],[906,59,34290],[905,60,34320],[904,60,34350],[903,61,34380],[902,61,34410],[901,62,34440],[900,62,34470],[899,63,34500],[898,63,34530],[897,64,34560],[896,64,34590],[895,65,34620],[894,65,34650],[893,66,34680],[892,66,34710],[891,67,34740],[890,67,34770],[889,68,34800],[888,68,34830],[887,69,34860],[886,69,34890],[885,70,34920],[884,70,34950],[883,71,34980],[882,71,35010],[881,72,35040],[880,72,35070],[879,73,35100],[878,73,35130],[877,74,35160],[876,74,35190],[875,75,35220],[874,75,35250],[873,76,35280],[872,76,35310],[871,77,35340],[870,77,35370],[869,78,35400],[868,78,35430],[867,79,35460],[866,79,35490],[865,80,35520],[864,80,35550],[863,81,35580],[862,81,35610],[861,82,35640],[860,82,35670],[859,83,35700],[858,83,35730],[857,84,35760],[856,84,35790],[855,85,35820],[854,85,35850],[853,86,35880],[852,86,35910],[851,87,35940],[850,87,35970],[849,88,36000],[848,88,36030],[847,89,36060],[846,89,36090],[845,90,36120],[844,90,36150],[843,91,36180],[842,91,36210],[841,92,36240],[840,92,36270],[839,93,36300],[838,93,36330],[837,94,36360],[836,94,36390],[835,95,36420],[834,95,36450],[833,96,36480],[832,96,36510],[831,97,36540],[830,97,36570],[829,98,36600],[828,98,36630],[827,99,36660],[826,99,36690],[825,100,36720],[824,100,36750],[823,101,36780],[822,101,36810],[821,102,36840],[820,102,36870],[819,103,36900],[818,103,36930],[817,104,36960],[816,104,36990],[815,105,37020],[814,105,37050],[813,106,37080],[812,106,37110],[811,107,37140],[810,107,37170],[809,108,37200],[808,108,37230],[807,109,37260],[806,109,37290],[805,110,37320],[804,110,37350],[803,111,37380],[802,111,37410],[801,112,37440],[800,112,37470],[799,113,37500],[798,113,37530],[797,114,37560],[796,114,37590],[795,115,37620],[794,115,37650],[793,116,37680],[792,116,37710],[791,117,37740],[790,117,37770],[789,118,37800],[788,118,37830],[787,119,37860],[786,119,37890],[785,120,37920],[784,120,37950],[783,121,37980],[782,121,38010],[781,122,38040],[780,122,38070],[779,123,38100],[778,123,38130],[777,124,38160],[776,124,38190],[775,125,38220],[774,125,38250],[773,126,38280],[772,126,38310],[771,127,38340],[770,127,38370],[769,128,38400],[768,128,38430],[767,129,38460],[766,129,38490],[765,130,38520],[764,130,38550],[763,131,38580],[762,131,38610],[761,132,38640],[760,132,38670],[759,133,38700],[758,133,38730],[757,134,38760],[756,134,38790],[755,135,38820],[754,135,38850],[753,136,38880],[752,136,38910],[751,137,38940],[750,137,38970],[749,138,39000],[748,138,39030],[747,139,39060],[746,139,39090],[745,140,39120],[744,140,39150],[743,141,39180],[742,141,39210],[741,142,39240],[740,142,39270],[739,143,39300],[738,143,39330],[737,144,39360],[736,144,39390],[735,145,39420],[734,145,39450],[733,146,39480],[732,146,39510],[731,147,39540],[730,147,39570],[729,148,39600],[728,148,39630],[727,149,39660],[726,149,39690],[725,150,39720],[724,150,39750],[723,151,39780],[722,151,39810],[721,152,39840],[720,152,39870],[719,153,39900],[718,153,39930],[717,154,39960],[716,154,39990],[715,155,40020],[714,155,40050],[713,156,40080],[712,156,40110],[711,157,40140],[710,157,40170],[709,158,40200],[708,158,40230],[707,159,40260],[706,159,40290],[705,160,40320],[704,160,40350],[703,161,40380],[702,161,40410],[701,162,40440],[700,162,40470],[699,163,40500],[698,163,40530],[697,164,40560],[696,164,40590],[695,165,40620],[694,165,40650],[693,166,40680],[692,166,40710],[691,167,40740],[690,167,40770],[689,168,40800],[688,168,40830],[687,169,40860],[686,169,40890],[685,170,40920],[684,170,40950],[683,171,40980],[682,171,41010],[681,172,41040],[680,172,41070],[679,173,41100],[678,173,41130],[677,174,41160],[676,174,41190],[675,175,41220],[674,175,41250],[673,176,41280],[672,176,41310],[671,177,41340],[670,177,41370],[669,178,41400],[668,178,41430],[667,179,41460],[666,179,41490],[665,180,41520],[664,180,41550],[663,181,41580],[662,181,41610],[661,182,41640],[660,182,41670],[659,183,41700],[658,183,41730],[657,184,41760],[656,184,41790],[655,185,41820],[654,185,41850],[653,186,41880],[652,186,41910],[651,187,41940],[650,187,41970],[649,188,42000],[648,188,42030],[647,189,42060],[646,189,42090],[645,190,42120],[644,190,42150],[643,191,42180],[642,191,42210],[641,192,42240],[640,192,42270],[639,193,42300],[638,193,42330],[637,194,42360],[636,194,42390],[635,195,42420],[634,195,42450],[633,196,42480],[632,196,42510],[631,197,42540],[630,197,42570],[629,198,42600],[628,198,42630],[627,199,42660],[626,199,42690],[625,200,42720],[624,200,42750],[623,201,42780],[622,201,42810],[621,202,42840],[620,202,42870],[619,203,42900],[618,203,42930],[617,204,42960],[616,204,42990],[615,205,43020],[614,205,43050],[613,206,43080],[612,206,43110],[611,207,43140],[610,207,43170],[609,208,43200],[608,208,43230],[607,209,43260],[606,209,43290],[605,210,43320],[604,210,43350],[603,211,43380],[602,211,43410],[601,212,43440],[600,212,43470],[599,213,43500],[598,213,43530],[597,214,43560],[596,214,43590],[595,215,43620],[594,215,43650],[593,216,43680],[592,216,43710],[591,217,43740],[590,217,43770],[589,218,43800],[588,218,43830],[587,219,43860],[586,219,43890],[585,220,43920],[584,220,43950],[583,221,43980],[582,221,44010],[581,222,44040],[580,222,44070],[579,223,44100],[578,223,44130],[577,224,44160],[576,224,44190],[575,225,44220],[574,225,44250],[573,226,44280],[572,226,44310],[571,227,44340],[570,227,44370],[569,228,44400],[568,228,44430],[567,229,44460],[566,229,44490],[565,230,44520],[564,230,44550],[563,231,44580],[562,231,44610],[561,232,44640],[560,232,44670],[559,233,44700],[558,233,44730],[557,234,44760],[556,234,44790],[555,235,44820],[554,235,44850],[553,236,44880],[552,236,44910],[551,237,44940],[550,237,44970],[549,238,45000],[548,238,45030],[547,239,45060],[546,239,45090],[545,240,45120],[544,240,45150],[543,241,45180],[542,241,45210],[541,242,45240],[540,242,45270],[539,243,45300],[538,243,45330],[537,244,45360],[536,244,45390],[535,245,45420],[534,245,45450],[533,246,45480],[532,246,45510],[531,247,45540],[530,247,45570],[529,248,45600],[528,248,45630],[527,249,45660],[526,249,45690],[525,250,45720],[524,250,45750],[523,251,45780],[522,251,45810],[521,252,45840],[520,252,45870],[519,253,45900],[518,253,45930],[517,254,45960],[516,254,45990],[515,255,46020],[514,255,46050],[513,256,46080],[512,256,46110],[511,257,46140],[510,257,46170],[509,258,46200],[508,258,46230],[507,259,46260],[506,259,46290],[505,260,46320],[504,260,46350],[503,261,46380],[502,261,46410],[501,262,46440],[500,262,46470],[499,263,46500],[498,263,46530],[497,264,46560],[496,264,46590],[495,265,46620],[494,265,46650],[493,266,46680],[492,266,46710],[491,267,46740],[490,267,46770],[489,268,46800],[488,268,46830],[487,269,46860],[486,269,46890],[485,270,46920],[484,270,46950],[483,271,46980],[482,271,47010],[481,272,47040],[480,272,47070],[479,273,47100],[478,273,47130],[477,274,47160],[476,274,47190],[475,275,47220],[474,275,47250],[473,276,47280],[472,276,47310],[471,277,47340],[470,277,47370],[469,278,47400],[468,278,47430],[467,279,47460],[466,279,47490],[465,280,47520],[464,280,47550],[463,281,47580],[462,281,47610],[461,282,47640],[460,282,47670],[459,283,47700],[458,283,47730],[457,284,47760],[456,284,47790],[455,285,47820],[454,285,47850],[453,286,47880],[452,286,47910],[451,287,47940],[450,287,47970],[449,288,48000],[448,288,48030],[447,289,48060],[446,289,48090],[445,290,48120],[444,290,48150],[443,291,48180],[442,291,48210],[441,292,48240],[440,292,48270],[439,293,48300],[438,293,48330],[437,294,48360],[436,294,48390],[435,295,48420],[434,295,48450],[433,296,48480],[432,296,48510],[431,297,48540],[430,297,48570],[429,298,48600],[428,298,48630],[427,299,48660],[426,299,48690],[425,300,48720],[424,300,48750],[423,301,48780],[422,301,48810],[421,302,48840],[420,302,48870],[419,303,48900],[418,303,48930],[417,304,48960],[416,304,48990],[415,305,49020],[414,305,49050],[413,306,49080],[412,306,49110],[411,307,49140],[410,307,49170],[409,308,49200],[408,308,49230],[407,309,49260],[406,309,49290],[405,310,49320],[404,310,49350],[403,311,49380],[402,311,49410],[401,312,49440],[400,312,49470],[399,313,49500],[398,313,49530],[397,314,49560],[396,314,49590],[395,315,49620],[394,315,49650],[393,316,49680],[392,316,49710],[391,317,49740],[390,317,49770],[389,318,49800],[388,318,49830],[387,319,49860],[386,319,49890],[385,320,49920],[384,320,49950],[383,321,49980],[382,321,50010],[381,322,50040],[380,322,50070],[379,323,50100],[378,323,50130],[377,324,50160],[376,324,50190],[375,325,50220],[374,325,50250],[373,326,50280],[372,326,50310],[371,327,50340],[370,327,50370],[369,328,50400],[368,328,50430],[367,329,50460],[366,329,50490],[365,330,50520],[364,330,50550],[363,331,50580],[362,331,50610],[361,332,50640],[360,332,50670],[359,333,50700],[358,333,50730],[357,334,50760],[356,334,50790],[355,335,50820],[354,335,50850],[353,336,50880],[352,336,50910],[351,337,50940],[350,337,50970],[349,338,51000],[348,338,51030],[347,339,51060],[346,339,51090],[345,340,51120],[344,340,51150],[343,341,51180],[342,341,51210],[341,342,51240],[340,342,51270],[339,343,51300],[338,343,51330],[337,344,51360],[336,344,51390],[335,345,51420],[334,345,51450],[333,346,51480],[332,346,51510],[331,347,51540],[330,347,51570],[329,348,51600],[328,348,51630],[327,349,51660],[326,349,51690],[325,350,51720],[324,350,51750],[323,351,51780],[322,351,51810],[321,352,51840],[320,352,51870],[319,353,51900],[318,353,51930],[317,354,51960],[316,354,51990],[315,355,52020],[314,355,52050],[313,356,52080],[312,356,52110],[311,357,52140],[310,357,52170],[309,358,52200],[308,358,52230],[307,359,52260],[306,359,52290],[305,360,52320],[304,360,52350],[303,361,52380],[302,361,52410],[301,362,52440],[300,362,52470],[299,363,52500],[298,363,52530],[297,364,52560],[296,364,52590],[295,365,52620],[294,365,52650],[293,366,52680],[292,366,52710],[291,367,52740],[290,367,52770],[289,368,52800],[288,368,52830],[287,369,52860],[286,369,52890],[285,370,52920],[284,370,52950],[283,371,52980],[282,371,53010],[281,372,53040],[280,372,53070],[279,373,53100],[278,373,53130],[277,374,53160],[276,374,53190],[275,375,53220],[274,375,53250],[273,376,53280],[272,376,53310],[271,377,53340],[270,377,53370],[269,378,53400],[268,378,53430],[267,379,53460],[266,379,53490],[265,380,53520],[264,380,53550],[263,381,53580],[262,381,53610],[261,382,53640],[260,382,53670],[259,383,53700],[258,383,53730],[257,384,53760],[256,384,53790],[255,385,53820],[254,385,53850],[253,386,53880],[252,386,53910],[251,387,53940],[250,387,53970],[249,388,54000],[248,388,54030],[247,389,54060],[246,389,54090],[245,390,54120],[244,390,54150],[243,391,54180],[242,391,54210],[241,392,54240],[240,392,54270],[239,393,54300],[238,393,54330],[237,394,54360],[236,394,54390],[235,395,54420],[234,395,54450],[233,396,54480],[232,396,54510],[231,397,54540],[230,397,54570],[229,398,54600],[228,398,54630],[227,399,54660],[226,399,54690],[225,400,54720],[224,400,54750],[223,401,54780],[222,401,54810],[221,402,54840],[220,402,54870],[219,403,54900],[218,403,54930],[217,404,54960],[216,404,54990],[215,405,55020],[214,405,55050],[213,406,55080],[212,406,55110],[211,407,55140],[210,407,55170],[209,408,55200],[208,408,55230],[207,409,55260],[206,409,55290],[205,410,55320],[204,410,55350],[203,411,55380],[202,411,55410],[201,412,55440],[200,412,55470],[199,413,55500],[198,413,55530],[197,414,55560],[196,414,55590],[195,415,55620],[194,415,55650],[193,416,55680],[192,416,55710],[191,417,55740],[190,417,55770],[189,418,55800],[188,418,55830],[187,419,55860],[186,419,55890],[185,420,55920],[184,420,55950],[183,421,55980],[182,421,56010],[181,422,56040],[180,422,56070],[179,423,56100],[178,423,56130],[177,424,56160],[176,424,56190],[175,425,56220],[174,425,56250],[173,426,56280],[172,426,56310],[171,427,56340],[170,427,56370],[169,428,56400],[168,428,56430],[167,429,56460],[166,429,56490],[165,430,56520],[164,430,56550],[163,431,56580],[162,431,56610],[161,432,56640],[160,432,56670],[159,433,56700],[158,433,56730],[157,434,56760],[156,434,56790],[155,435,56820],[154,435,56850],[153,436,56880],[152,436,56910],[151,437,56940],[150,437,56970],[149,438,57000],[148,438,57030],[147,439,57060],[146,439,57090],[145,440,57120],[144,440,57150],[143,441,57180],[142,441,57210],[141,442,57240],[140,442,57270],[139,443,57300],[138,443,57330],[137,444,57360],[136,444,57390],[135,445,57420],[134,445,57450],[133,446,57480],[132,446,57510],[131,447,57540],[130,447,57570],[129,448,57600],[128,448,57630],[127,449,57660],[126,449,57690],[125,450,57720],[124,450,57750],[123,451,57780],[122,451,57810],[121,452,57840],[120,452,57870],[119,453,57900],[118,453,57930],[117,454,57960],[116,454,57990],[115,455,58020],[114,455,58050],[113,456,58080],[112,456,58110],[111,457,58140],[110,457,58170],[109,458,58200],[108,458,58230],[107,459,58260],[106,459,58290],[105,460,58320],[104,460,58350],[103,461,58380],[102,461,58410],[101,462,58440],[100,462,58470],[99,463,58500],[98,463,58530],[97,464,58560],[96,464,58590],[95,465,58620],[94,465,58650],[93,466,58680],[92,466,58710],[91,467,58740],[90,467,58770],[89,468,58800],[88,468,58830],[87,469,58860],[86,469,58890],[85,470,58920],[84,470,58950],[83,471,58980],[82,471,59010],[81,472,59040],[80,472,59070],[79,473,59100],[78,473,59130],[77,474,59160],[76,474,59190],[75,475,59220],[74,475,59250],[73,476,59280],[72,476,59310],[71,477,59340],[70,477,59370],[69,478,59400],[68,478,59430],[67,479,59460],[66,479,59490],[65,480,59520],[64,480,59550],[63,481,59580],[62,481,59610],[61,482,59640],[60,482,59670],[59,483,59700],[58,483,59730],[57,484,59760],[56,484,59790],[55,485,59820],[54,485,59850],[53,486,59880],[52,486,59910],[51,487,59940],[50,487,59970],[49,488,60000],[48,488,60030],[47,489,60060],[46,489,60090],[45,490,60120],[44,490,60150],[43,491,60180],[42,491,60210],[41,492,60240],[40,492,60270],[39,493,60300],[38,493,60330],[37,494,60360],[36,494,60390],[35,495,60420],[34,495,60450],[33,496,60480],[32,496,60510],[31,497,60540],[30,497,60570],[29,498,60600],[28,498,60630],[27,499,60660],[26,499,60690],[25,500,60720],[24,500,60750],[23,501,60780],[22,501,60810],[21,502,60840],[20,502,60870],[19,503,60900],[18,503,60930],[17,504,60960],[16,504,60990],[15,505,61020],[14,505,61050],[13,506,61080],[12,506,61110],[11,507,61140],[10,507,61170],[9,508,61200],[8,508,61230],[7,509,61260],[6,509,61290],[5,510,61320],[4,510,61350],[3,511,61380],[2,511,61410],[1,512,61440],[0,512,61470]]";


@implementation MainViewController

// Facebook Properties
@synthesize label = _label;

// Sound Record & Play Properties
@synthesize recording = _recording;
@synthesize recordButton = _recordButton;

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil {
	if (self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil]) {
		if (kGetSessionProxy) {
			_session = [[FBSession sessionForApplication:kApiKey getSessionProxy:kGetSessionProxy delegate:self] retain];
		}
		else {
			_session = [[FBSession sessionForApplication:kApiKey secret:kApiSecret delegate:self] retain];
		}
	}
	return self;
}


- (void)dealloc {
	// Facebook dealloc
  [_session release];
	
	// AVAudioRecorder dealloc
	[recorder release];
	[_recordingFile release];
	[_recordingSettings release];
	[player	release];
	
	[super dealloc];
}

///////////////////////////////////////////////////////////////////////////////////////////////////
// UIViewController


// Implement viewDidLoad to do additional setup after loading the view, typically from a nib.
- (void)viewDidLoad {
	[super viewDidLoad];
	
	// Facebook Initialize Code
	[_session resume];
	_loginButton.style = FBLoginButtonStyleWide;
	
	// AVAudioRecorder Initialize Code
	
}

- (void)viewDidUnload {
	// Release any retained subviews of the main view.
	// e.g. self.myOutlet = nil;
}

/*
 // Override to allow orientations other than the default portrait orientation.
 - (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation {
 // Return YES for supported orientations
 return (interfaceOrientation == UIInterfaceOrientationPortrait);
 }
 */

- (void)didReceiveMemoryWarning {
	// Releases the view if it doesn't have a superview.
	[super didReceiveMemoryWarning];
	
	// Release any cached data, images, etc that aren't in use.
}




/*
 // Override to allow orientations other than the default portrait orientation.
 - (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation {
 // Return YES for supported orientations
 return (interfaceOrientation == UIInterfaceOrientationPortrait);
 }
 */


///////////////////////////////////////////////////////////////////////////////////////////////////
// FlipsideViewControllerDelegate

- (void)flipsideViewControllerDidFinish:(FlipsideViewController *)controller {
	
	[self dismissModalViewControllerAnimated:YES];
}


- (IBAction)showInfo {    
	
	FlipsideViewController *controller = [[FlipsideViewController alloc] initWithNibName:@"FlipsideView" bundle:nil];
	controller.delegate = self;
	
	controller.modalTransitionStyle = UIModalTransitionStyleFlipHorizontal;
	[self presentModalViewController:controller animated:YES];
	
	[controller release];
}


- (IBAction)recordButtonClicked {
	if (_recording) {
		[self stopRecording];
	}
	else {
		[self startRecording];
	}
	
}


///////////////////////////////////////////////////////////////////////////////////////////////////
// FBDialogDelegate

- (void)dialog:(FBDialog*)dialog didFailWithError:(NSError*)error {
  _label.text = [NSString stringWithFormat:@"Error(%d) %@", error.code, error.localizedDescription];
}


// This method splits off to continue to ask for the 2nd (video upload) permission if necessary
- (void)dialogDidSucceed:(FBDialog*)dialog { 
	_label.text = [NSString stringWithFormat:@"Permission Set Succeeded: %@", ((FBPermissionDialog *)dialog).permission];
	
	// Ask for video second
	if (@"status_update" == ((FBPermissionDialog *)dialog).permission) {
		[self askVideoUploadPermission];
	}
}

///////////////////////////////////////////////////////////////////////////////////////////////////
// FBSessionDelegate

- (void)session:(FBSession*)session didLogin:(FBUID)uid {
	NSString* fql = [NSString stringWithFormat:@"select uid,name from user where uid == %lld", session.uid];
	
	NSDictionary* params = [NSDictionary dictionaryWithObject:fql forKey:@"query"];
	[[FBRequest requestWithDelegate:self] call:@"facebook.fql.query" params:params];
}

- (void)sessionDidLogout:(FBSession*)session {
  _label.text = @"Logged Out.";
}

///////////////////////////////////////////////////////////////////////////////////////////////////
// FBRequestDelegate

- (void)request:(FBRequest*)request didLoad:(id)result {
  NSArray* users = result;
  NSDictionary* user = [users objectAtIndex:0];
  NSString* name = [user objectForKey:@"name"];
  _label.text = [NSString stringWithFormat:@"Logged in as %@", name];
	
	[self askPermission:result];
}

- (void)request:(FBRequest*)request didFailWithError:(NSError*)error {
  _label.text = [NSString stringWithFormat:@"Error(%d) %@", error.code, error.localizedDescription];
}


///////////////////////////////////////////////////////////////////////////////////////////////////
// Facebook connection actions

- (void)askPermission:(id)target {
  FBPermissionDialog* dialog = [[[FBPermissionDialog alloc] init] autorelease];
  dialog.delegate = self;
  dialog.permission = @"status_update";
  [dialog show];
}


- (void)askVideoUploadPermission {
  FBPermissionDialog* dialog = [[[FBPermissionDialog alloc] init] autorelease];
  dialog.delegate = self;
  dialog.permission = @"video_upload";
  [dialog show];
}

///////////////////////////////////////////////////////////////////////////////////////////////////
// Audio Video & Recording Actions


- (void) resetRecordButton {
	[_recordButton setTitle:@"Record" forState:UIControlStateNormal];
	_recording = NO;
}

- (void) startRecording {
	[_recordButton setTitle:@"Stop" forState:UIControlStateNormal];
	
	AVAudioSession *audioSession = [AVAudioSession sharedInstance];
	NSError *err = nil;
	[audioSession setCategory :AVAudioSessionCategoryPlayAndRecord error:&err];
	if(err){
		NSLog(@"audioSession: %@ %d %@", [err domain], [err code], [[err userInfo] description]);
		return;
	}
	[audioSession setActive:YES error:&err];
	err = nil;
	if(err){
		NSLog(@"audioSession: %@ %d %@", [err domain], [err code], [[err userInfo] description]);
		return;
	}
	
	if (!_recordingSettings) {
		_recordingSettings = [[NSMutableDictionary alloc] init];
		[_recordingSettings setValue :[NSNumber numberWithInt:kAudioFormatLinearPCM] forKey:AVFormatIDKey];
		[_recordingSettings setValue:[NSNumber numberWithFloat:44100.0] forKey:AVSampleRateKey]; 
		[_recordingSettings setValue:[NSNumber numberWithInt: 2] forKey:AVNumberOfChannelsKey];
		[_recordingSettings setValue :[NSNumber numberWithInt:16] forKey:AVLinearPCMBitDepthKey];
		[_recordingSettings setValue :[NSNumber numberWithBool:NO] forKey:AVLinearPCMIsBigEndianKey];
		[_recordingSettings setValue :[NSNumber numberWithBool:NO] forKey:AVLinearPCMIsFloatKey];
	}
	
	// Create a new dated file
	NSDate *now = [NSDate dateWithTimeIntervalSinceNow:0];
	NSString *caldate = [now description];
	_recordingFile = [[NSString stringWithFormat:@"%@/%@.caf", AUDIO_SAVE_DIR, caldate] retain];
	
	NSURL *url = [NSURL fileURLWithPath:_recordingFile];
	err = nil;
	recorder = [[ AVAudioRecorder alloc] initWithURL:url settings:_recordingSettings error:&err];
	if (!recorder) {
		NSLog(@"recorder: %@ %d %@", [err domain], [err code], [[err userInfo] description]);
		UIAlertView *alert =
		[[UIAlertView alloc] initWithTitle: @"Warning"
															 message: [err localizedDescription]
															delegate: nil
										 cancelButtonTitle: @"OK"
										 otherButtonTitles: nil];
		[alert show];
		[alert release];
		[self resetRecordButton];
		return;
	}
	
	//prepare to record
	[recorder setDelegate:self];
	[recorder prepareToRecord];
	recorder.meteringEnabled = YES;
	
	BOOL audioHWAvailable = audioSession.inputIsAvailable;
	if (! audioHWAvailable) {
		UIAlertView *cantRecordAlert =
		[[UIAlertView alloc] initWithTitle: @"Warning"
															 message: @"Audio input hardware not available"
															delegate: nil
										 cancelButtonTitle:@"OK"
										 otherButtonTitles:nil];
		[cantRecordAlert show];
		[cantRecordAlert release]; 
		return;
	}
	
	// start recording
	[recorder recordForDuration:(NSTimeInterval) 120];
	_recording = YES;
}

- (void) stopRecording {
	[recorder stop];
}

- (void) playRecording {
	NSURL *url = [NSURL fileURLWithPath: _recordingFile];
	NSError *err;
	if (player) {
		[player release];
		player = nil;
	}
	player = [[AVAudioPlayer alloc] initWithContentsOfURL:url error:&err];
	player.numberOfLoops = 0;
	
	if (player == nil) {
		UIAlertView *cantPlayAlert =
		[[UIAlertView alloc] initWithTitle: @"Can't Play Recording"
															 message: [err localizedDescription]
															delegate: nil
										 cancelButtonTitle:@"OK"
										 otherButtonTitles:nil];
		[cantPlayAlert show];
		[cantPlayAlert release];
	}
	else {
		[player play];
	}
}

- (void) handleRecordingStopped {
	NSURL *url = [NSURL fileURLWithPath: _recordingFile];
	NSError *err = nil;
	
	_label.text = @"Checking audio data...";
	NSData *audioData = [NSData dataWithContentsOfFile:[url path] options: 0 error:&err];
	if(!audioData) {
		NSLog(@"audio data: %@ %d %@", [err domain], [err code], [[err userInfo] description]);
	}
	
	//[editedObject setValue:[NSData dataWithContentsOfURL:url] forKey:editedFieldKey];       
	////[recorder deleteRecording];
	
	
	//NSFileManager *fm = [NSFileManager defaultManager];
	//err = nil;
	//[fm removeItemAtPath:[url path] error:&err];
	//if(err) {
	//	NSLog(@"File Manager: %@ %d %@", [err domain], [err code], [[err userInfo] description]);
	//}

	
	_label.text = @"Playing recording...";
	[self playRecording];
	[self resetRecordButton];
	
	_label.text = @"Uploading audio...";
	[self uploadAudio:_recordingFile withPic:kUploadVideoCoords withMessage:nil fuid:[NSString stringWithFormat:@"%lld", _session.uid] apiKey:kApiKey facebookSessionKey:_session.sessionKey ];
}

- (void)audioRecorderDidFinishRecording:(AVAudioRecorder *) aRecorder successfully:(BOOL)flag {
	[self handleRecordingStopped];
}




///////////////////////////////////////////////////////////////////////////////////////////////////
// Upload Actions

- (void)uploadingDataWithURLRequest:(NSURLRequest *)urlRequest {
	// Called on a separate thread; upload and handle server response
	NSHTTPURLResponse *urlResponse;
	NSError			  *error;
	NSString		  *responseString;
	NSData			  *responseData;
	
	NSAutoreleasePool *pool = [[NSAutoreleasePool alloc] init];		// Each thread must have its own NSAutoreleasePool
	
	[urlRequest retain];  // Retain since we autoreleased it before
	
	// Send the request
	urlResponse = nil;  
	responseData = [NSURLConnection sendSynchronousRequest:urlRequest
																			 returningResponse:&urlResponse   
																									 error:&error];  
	responseString = [[NSString alloc] initWithData:responseData
																				 encoding:NSUTF8StringEncoding];
	
	// Handle the error or success
	// If error, create error message and throw up UIAlertView
	NSLog(@"Response Code: %d", [urlResponse statusCode]);
	if ([urlResponse statusCode] >= 200 && [urlResponse statusCode] < 300) {
		NSLog(@"urlResultString: %@", responseString);
		
		//NSString *match = [responseString stringByMatching:@"http[a-zA-Z0-9.:/]*"];  // Match the URL for the post
		//NSLog(@"match: %@", match);
		
		// Notice back to self
		[self performSelectorOnMainThread:@selector(didUploadWithResponse:) withObject:responseString waitUntilDone:NO];
	}
	else {
		NSLog(@"Error while uploading, got 400 error back or no response at all: %d", [urlResponse statusCode]);
		[self performSelectorOnMainThread:@selector(didUploadWithResponse:) withObject:nil waitUntilDone:NO]; // Nil should mean "upload failed" to this method
	}
	
	[pool release];	 // Release everything except responseData and urlResponse–they're autoreleased on creation
	[responseString release];  
	[urlRequest release];
}


- (BOOL)uploadAudio:(NSString *)audioFile withPic:(NSString *)picCoords withMessage:(NSString *)theMessage fuid:(NSString *)fuid apiKey:(NSString *)apiKey facebookSessionKey:(NSString *)facebookSessionKey {
	NSString			*stringBoundary, *contentType, *message;
	NSData				*audioData;
	NSURL				*url;
	NSMutableURLRequest *urlRequest;
	NSMutableData		*postBody;
	
	// Create POST request from message, imageData, fuid and apiKey
	url				= [NSURL URLWithString:kServerUploadURL];
	urlRequest		= [[[NSMutableURLRequest alloc] initWithURL:url] autorelease];
	[urlRequest setHTTPMethod:@"POST"];	
	
	// Set the params
	message		  = ([theMessage length] > 1) ? theMessage : kDefaultUploadMessage;
	audioData	  = [NSData dataWithContentsOfURL:[NSURL fileURLWithPath: audioFile]];
	
	// Setup POST body
	stringBoundary = [NSString stringWithString:@"0xKhTmLbOuNdArY"];
	contentType    = [NSString stringWithFormat:@"multipart/form-data; boundary=%@", stringBoundary];
	[urlRequest addValue:contentType forHTTPHeaderField:@"Content-Type"]; 
	
	// Setting up the POST request's multipart/form-data body
	postBody = [NSMutableData data];
	
	// Fix for Rails requests: http://www.wetware.co.nz/blog/2009/03/upload-a-photo-from-iphone-64-encoding-multi-part-form-data/
	//[postBody appendData:[[NSString stringWithFormat:@"\r\n\r\n--%@\r\n", stringBoundary] dataUsingEncoding:NSUTF8StringEncoding]];
	[postBody appendData:[[NSString stringWithFormat:@"--%@\r\n", stringBoundary] dataUsingEncoding:NSUTF8StringEncoding]];
	
	[postBody appendData:[[NSString stringWithString:@"Content-Disposition: form-data; name=\"source\"\r\n\r\n"] dataUsingEncoding:NSUTF8StringEncoding]];
	[postBody appendData:[[NSString stringWithString:kTwitterSource] dataUsingEncoding:NSUTF8StringEncoding]];  // To show up as source in Twitter post
	
	[postBody appendData:[[NSString stringWithFormat:@"\r\n--%@\r\n", stringBoundary] dataUsingEncoding:NSUTF8StringEncoding]];
	[postBody appendData:[[NSString stringWithString:@"Content-Disposition: form-data; name=\"credentials[facebook_id]\"\r\n\r\n"] dataUsingEncoding:NSUTF8StringEncoding]];
	[postBody appendData:[[NSString stringWithString:fuid] dataUsingEncoding:NSUTF8StringEncoding]];  // facebook_id
	
	[postBody appendData:[[NSString stringWithFormat:@"\r\n--%@\r\n", stringBoundary] dataUsingEncoding:NSUTF8StringEncoding]];
	[postBody appendData:[[NSString stringWithString:@"Content-Disposition: form-data; name=\"credentials[key]\"\r\n\r\n"] dataUsingEncoding:NSUTF8StringEncoding]];
	[postBody appendData:[[NSString stringWithString:apiKey] dataUsingEncoding:NSUTF8StringEncoding]];  // api_key
	
	if (facebookSessionKey) {
		NSLog(@"Facebook session key: %@", facebookSessionKey);
		[postBody appendData:[[NSString stringWithFormat:@"\r\n--%@\r\n", stringBoundary] dataUsingEncoding:NSUTF8StringEncoding]];
		[postBody appendData:[[NSString stringWithString:@"Content-Disposition: form-data; name=\"upload[facebook_session_key]\"\r\n\r\n"] dataUsingEncoding:NSUTF8StringEncoding]];
		[postBody appendData:[[NSString stringWithString:facebookSessionKey] dataUsingEncoding:NSUTF8StringEncoding]];  // facebook_session_key
	}

	[postBody appendData:[[NSString stringWithFormat:@"\r\n--%@\r\n", stringBoundary] dataUsingEncoding:NSUTF8StringEncoding]];
	[postBody appendData:[[NSString stringWithString:@"Content-Disposition: form-data; name=\"upload[message]\"\r\n\r\n"] dataUsingEncoding:NSUTF8StringEncoding]];
	[postBody appendData:[[NSString stringWithString:message] dataUsingEncoding:NSUTF8StringEncoding]];  // message
	
	[postBody appendData:[[NSString stringWithFormat:@"\r\n--%@\r\n", stringBoundary] dataUsingEncoding:NSUTF8StringEncoding]];
	[postBody appendData:[[NSString stringWithString:@"Content-Disposition: form-data; name=\"upload[picture_coordinates]\"\r\n\r\n"] dataUsingEncoding:NSUTF8StringEncoding]];
	[postBody appendData:[[NSString stringWithString:picCoords] dataUsingEncoding:NSUTF8StringEncoding]];  // Pictogrammica coordinates
	
	[postBody appendData:[[NSString stringWithFormat:@"\r\n--%@\r\n", stringBoundary] dataUsingEncoding:NSUTF8StringEncoding]];
	[postBody appendData:[[NSString stringWithFormat:@"Content-Disposition: form-data; name=\"upload[attachment]\"; filename=\"%@\"\r\n", kUploadFilename ] dataUsingEncoding:NSUTF8StringEncoding]];
	[postBody appendData:[[NSString stringWithFormat:@"Content-Type: %@\r\n", kUploadFiletype] dataUsingEncoding:NSUTF8StringEncoding]];  // file as data
	[postBody appendData:[[NSString stringWithString:@"Content-Transfer-Encoding: binary\r\n\r\n"] dataUsingEncoding:NSUTF8StringEncoding]];
	[postBody appendData:audioData];  // Tack on the audioData to the end
	
	[postBody appendData:[[NSString stringWithFormat:@"\r\n--%@--\r\n", stringBoundary] dataUsingEncoding:NSUTF8StringEncoding]];
	[urlRequest setHTTPBody:postBody];
	
	// Spawn a new thread so the UI isn't blocked while we're uploading the audio
	[NSThread detachNewThreadSelector:@selector(uploadingDataWithURLRequest:) toTarget:self withObject:urlRequest];	
	
	return YES;  // TODO: Should raise exception on error
}

- (void)didUploadWithResponse:(NSString *)responseString {
	_label.text = @"Upload complete (or errored).";
	if (responseString) {
		UIAlertView *uploadCompleteAlert =
		[[UIAlertView alloc] initWithTitle: @"Recording Uploaded!"
															 message: responseString
															delegate: nil
										 cancelButtonTitle:@"OK"
										 otherButtonTitles:nil];
		[uploadCompleteAlert show];
		[uploadCompleteAlert release];
		
	}
	else {
		UIAlertView *cantUploadAlert =
		[[UIAlertView alloc] initWithTitle: @"Can't Upload Recording :("
															 message: @"Damn, check the server logs"
															delegate: nil
										 cancelButtonTitle:@"OK"
										 otherButtonTitles:nil];
		[cantUploadAlert show];
		[cantUploadAlert release];
	}
}

@end
